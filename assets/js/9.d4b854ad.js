(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{52:function(t,e,s){t.exports=s.p+"assets/img/3.7ce5a234.png"},53:function(t,e,s){t.exports=s.p+"assets/img/6.ae23ba4f.png"},54:function(t,e,s){t.exports=s.p+"assets/img/5.14c48207.png"},55:function(t,e,s){t.exports=s.p+"assets/img/4.d26bd758.png"},56:function(t,e,s){t.exports=s.p+"assets/img/2.3602cf68.png"},57:function(t,e,s){t.exports=s.p+"assets/img/1.ac42918c.png"},87:function(t,e,s){"use strict";s.r(e);var a=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"react-native-使用-运算符产生的陷阱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-native-使用-运算符产生的陷阱","aria-hidden":"true"}},[this._v("#")]),this._v(" React Native 使用 && 运算符产生的陷阱")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"问题背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题背景","aria-hidden":"true"}},[this._v("#")]),this._v(" 问题背景")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("java.lang.RuntimeException: Cannot add a child that doesn't have a YogaNode to a parent without a measure function! (Trying to add a 'ReactRawTextShadowNode' to a 'LayoutShadowNode')\n...（后面太长省略掉了）\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原因","aria-hidden":"true"}},[this._v("#")]),this._v(" 原因")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个错误之前遇到过，当React Native 渲染出的文字节点并没有被"),e("code",[this._v("<Text>")]),this._v("标签包裹时，会出现这样的错误。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("随后我用"),e("code",[this._v("create-react-native-app")]),this._v("创建了新的Demo,并修改"),e("code",[this._v("app.js")]),this._v("中的代码至如下\n"),e("img",{attrs:{src:s(57),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("去掉"),e("code",[this._v("<Text/>")]),this._v("标签并运行")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当我们的文字节点没有被"),e("code",[this._v("<Text>")]),this._v("标签包裹时，React Native会限制这种行为并报错。\n"),e("img",{attrs:{src:s(56),alt:""}}),this._v("\n这是在React Native 0.50下错误信息（最后会有个0.56版本的错误信息，表意比这个清楚很多）")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("在我的业务代码中，有这样一段代码\n"),a("img",{attrs:{src:s(55),alt:""}}),t._v("\n我这段代码中，按照后端给的接口文档，evaluation的类型是"),a("code",[t._v("string")]),t._v("或"),a("code",[t._v("null")]),t._v("。后端返回的大部分非"),a("code",[t._v("null")]),t._v("的数据中，都是非空的字符串。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("然而，有一种情况，是我当初没有考虑到的。当evaluation字段为"),e("strong",[this._v("空字符串")]),this._v("时，这个”逻辑与“的表达式会返回 "),e("code",[this._v("&&")]),this._v("前面的部分，即"),e("code",[this._v('""')]),this._v("，")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("然而在React Native环境中，因为Text Node必须被"),e("code",[this._v("<Text>")]),this._v("标签包裹的限制，若空字符串被直接渲染，外部没有"),e("code",[this._v("<Text>")]),this._v("标签包裹,就会导致这样的错误。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"解决方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 解决方法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个问题要解决其实并不难，只需要用将逻辑与表达式第一个操作数强制转化为Boolean再与第二个操作数"),e("code",[this._v("&&")]),this._v("即可。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("因此上面的代码改为\n"),e("img",{attrs:{src:s(54),alt:""}}),this._v("\n或者骚气一点，使用"),e("code",[this._v("!!")]),this._v("的trick可以将一个值转化为Boolean。（有些团队这样写可能过不了code review 233）\n"),e("img",{attrs:{src:s(53),alt:""}}),this._v("\n这个错误告诉我们，React Native环境下，在JSX表达式中使用逻辑与运算符时，一定要避免渲染0或者空字符串到DOM上但没有被"),e("code",[this._v("<Text/>")]),this._v("标签包裹的这种情况。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("a",{attrs:{href:"https://reactjs.org/docs/react-component.html#render",target:"_blank",rel:"noopener noreferrer"}},[this._v("React官网关于render函数对各种不同类型返回值渲染策略")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"ps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ps","aria-hidden":"true"}},[this._v("#")]),this._v(" PS")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(52),alt:""}}),this._v("\nReact Native 0.56在上面所说情况下的报错信息，比起0.50的报错，表达更清楚了。")])}],r=s(0),n=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._m(1),s("p",[t._v("近期的工作大部分都是关于React Native的。之前使用RN写的旧项目在友盟里报了一个这样的错误")]),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),s("p",[t._v("所以在大部分的情况下，这段代码是可以运行的。")]),t._m(9),s("p",[t._v("在React中，render函数会根据返回值的类型不同，选择不同的渲染策略：")]),s("ul",[s("li",[t._v("React elements. Typically created via JSX. For example, "),s("div"),t._v(" and "),s("MyComponent"),t._v(" are React elements that instruct React to render a DOM node, or another user-defined component, respectively.")],1),s("li",[t._v("Arrays and fragments. Let you return multiple elements from render. See the documentation on fragments for more details.")]),s("li",[t._v("Portals. Let you render children into a different DOM subtree. See the documentation on portals for more details.")]),s("li",[t._v("String and numbers. These are rendered as text nodes in the DOM.")]),s("li",[t._v("Booleans or null. Render nothing. (Mostly exists to support return test && "),s("Child"),t._v(" pattern, where test is boolean.)")],1)]),s("p",[t._v("显然，当为Boolean或者null的时候，React不会渲染任何东西。而对于字符串和数字，那么会渲染一个Text Node 到 DOM上。当React的执行环境为浏览器时，渲染一个空字符串的Text Node 到 DOM上和不渲染任何东西，对于最后显示的效果都是一样的.")]),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17)])},a,!1,null,null,null);e.default=n.exports}}]);